
import { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import Navbar from "@/components/Navbar";
import { BarChart3, RefreshCw, ExternalLink, Download, Activity, TrendingUp } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

const PowerBIAnalytics = () => {
  const [isRefreshing, setIsRefreshing] = useState(false);
  const [hospitalData, setHospitalData] = useState<any>(null);
  const [lastUpdated, setLastUpdated] = useState<string>("");
  const { toast } = useToast();

  useEffect(() => {
    // Load data from localStorage
    const storedData = localStorage.getItem('hospitalData');
    if (storedData) {
      setHospitalData(JSON.parse(storedData));
    }
    setLastUpdated(new Date().toLocaleString());
  }, []);

  const handleRefresh = async () => {
    setIsRefreshing(true);
    console.log("Refreshing analytics data...");
    
    // Simulate data refresh
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    setLastUpdated(new Date().toLocaleString());
    setIsRefreshing(false);
    
    toast({
      title: "Data refreshed",
      description: "Analytics dashboard has been updated with the latest data.",
    });
  };

  const handleOpenPowerBI = () => {
    console.log("Opening Power BI in new window...");
    // In a real implementation, this would open the actual Power BI report
    window.open('https://app.powerbi.com/reportEmbed?reportId=sample-report', '_blank');
    
    toast({
      title: "Opening Power BI",
      description: "Power BI report is opening in a new window.",
    });
  };

  const handleDownloadReport = (reportType: string) => {
    console.log(`Downloading ${reportType} report...`);
    
    // Simulate report generation and download
    const reportData = {
      reportType,
      generatedAt: new Date().toISOString(),
      hospitalData: hospitalData,
      summary: "Healthcare analytics report generated by CognizantCare AI"
    };
    
    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${reportType.toLowerCase().replace(' ', '_')}_report.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    toast({
      title: "Report downloaded",
      description: `${reportType} report has been downloaded successfully.`,
    });
  };

  // Generate realistic metrics based on uploaded data
  const generateMetrics = () => {
    if (!hospitalData) {
      return {
        occupancy: 87,
        expectedAdmissions: 134,
        peakHour: "2:00 PM",
        availableBeds: 23,
        departments: [
          { name: 'Emergency', percentage: 45, color: 'bg-red-500' },
          { name: 'Cardiology', percentage: 28, color: 'bg-blue-500' },
          { name: 'Pediatrics', percentage: 19, color: 'bg-green-500' },
          { name: 'Surgery', percentage: 32, color: 'bg-purple-500' }
        ]
      };
    }

    const baseOccupancy = Math.floor(Math.random() * 20) + 75; // 75-95%
    return {
      occupancy: baseOccupancy,
      expectedAdmissions: Math.floor(hospitalData.totalRecords * 0.1) + Math.floor(Math.random() * 50),
      peakHour: ["10:00 AM", "2:00 PM", "6:00 PM", "8:00 PM"][Math.floor(Math.random() * 4)],
      availableBeds: Math.floor((100 - baseOccupancy) * 0.5) + 10,
      departments: hospitalData.departments.slice(0, 4).map((dept: string, index: number) => ({
        name: dept,
        percentage: Math.floor(Math.random() * 30) + 15,
        color: ['bg-red-500', 'bg-blue-500', 'bg-green-500', 'bg-purple-500'][index % 4]
      }))
    };
  };

  const metrics = generateMetrics();

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-blue-50">
      <Navbar />
      
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="mb-8">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">
            Interactive Analytics Dashboard
          </h1>
          <p className="text-xl text-gray-600">
            Comprehensive hospital analytics powered by Power BI with real-time insights and interactive visualizations.
          </p>
          {lastUpdated && (
            <p className="text-sm text-gray-500 mt-2">
              Last updated: {lastUpdated}
            </p>
          )}
        </div>

        <Tabs defaultValue="forecast" className="space-y-6">
          <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
            <TabsList className="grid w-full sm:w-auto grid-cols-3">
              <TabsTrigger value="forecast">Forecast Dashboard</TabsTrigger>
              <TabsTrigger value="powerbi">Power BI Report</TabsTrigger>
              <TabsTrigger value="summary">Download Summary</TabsTrigger>
            </TabsList>

            <div className="flex gap-2">
              <Button
                variant="outline"
                onClick={handleRefresh}
                disabled={isRefreshing}
              >
                <RefreshCw className={`w-4 h-4 mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />
                {isRefreshing ? 'Refreshing...' : 'Refresh Data'}
              </Button>
              <Button variant="outline" onClick={handleOpenPowerBI}>
                <ExternalLink className="w-4 h-4 mr-2" />
                Open in Power BI
              </Button>
            </div>
          </div>

          <TabsContent value="forecast" className="space-y-6">
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {/* Quick Stats */}
              <Card className="medical-card">
                <CardHeader>
                  <CardTitle className="text-lg flex items-center">
                    <Activity className="w-5 h-5 mr-2 text-blue-600" />
                    Today's Overview
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="flex justify-between">
                    <span className="text-gray-600">Current Occupancy</span>
                    <span className="font-semibold text-blue-600">{metrics.occupancy}%</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">Expected Admissions</span>
                    <span className="font-semibold text-green-600">{metrics.expectedAdmissions}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">Peak Hour</span>
                    <span className="font-semibold text-orange-600">{metrics.peakHour}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">Available Beds</span>
                    <span className="font-semibold text-purple-600">{metrics.availableBeds}</span>
                  </div>
                </CardContent>
              </Card>

              {/* Department Breakdown */}
              <Card className="medical-card">
                <CardHeader>
                  <CardTitle className="text-lg">Department Analysis</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {metrics.departments.map((dept, index) => (
                      <div key={dept.name} className="flex items-center justify-between">
                        <div className="flex items-center space-x-2">
                          <div className={`w-3 h-3 rounded-full ${dept.color}`}></div>
                          <span className="text-sm text-gray-700">{dept.name}</span>
                        </div>
                        <span className="text-sm font-medium">{dept.percentage}%</span>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>

              {/* Patient Demographics */}
              <Card className="medical-card">
                <CardHeader>
                  <CardTitle className="text-lg">Patient Demographics</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div>
                      <div className="flex justify-between mb-1">
                        <span className="text-sm text-gray-600">Male</span>
                        <span className="text-sm font-medium">52%</span>
                      </div>
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div className="bg-blue-500 h-2 rounded-full" style={{ width: '52%' }}></div>
                      </div>
                    </div>
                    <div>
                      <div className="flex justify-between mb-1">
                        <span className="text-sm text-gray-600">Female</span>
                        <span className="text-sm font-medium">48%</span>
                      </div>
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div className="bg-pink-500 h-2 rounded-full" style={{ width: '48%' }}></div>
                      </div>
                    </div>
                    <div className="pt-2 text-xs text-gray-500">
                      Age distribution: 25% (0-18), 45% (19-65), 30% (65+)
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* Interactive Chart Simulation */}
            <Card className="medical-card">
              <CardHeader>
                <CardTitle className="text-lg flex items-center">
                  <TrendingUp className="w-5 h-5 mr-2 text-blue-600" />
                  7-Day Admission Forecast
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="h-64 bg-gradient-to-r from-blue-50 to-green-50 rounded-lg flex items-center justify-center border-2 border-dashed border-blue-200">
                  <div className="text-center text-gray-600">
                    <BarChart3 className="w-16 h-16 mx-auto mb-4 text-blue-500" />
                    <h3 className="text-lg font-medium mb-2">Interactive Forecast Chart</h3>
                    <p className="text-sm max-w-md">
                      Real-time comparison of predicted vs actual admissions would be displayed here.
                      {hospitalData && (
                        <span className="block mt-2 font-medium text-blue-600">
                          Based on {hospitalData.totalRecords} historical records
                        </span>
                      )}
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="powerbi" className="space-y-6">
            <Card className="medical-card">
              <CardHeader>
                <CardTitle className="text-lg flex items-center">
                  <BarChart3 className="w-5 h-5 mr-2" />
                  Power BI Report Integration
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="relative h-96 bg-gray-100 rounded-lg border-2 border-dashed border-gray-300">
                  <div className="absolute inset-0 flex items-center justify-center bg-gradient-to-br from-blue-50 to-white rounded-lg">
                    <div className="text-center p-8">
                      <BarChart3 className="w-20 h-20 mx-auto mb-6 text-blue-500" />
                      <h3 className="text-xl font-semibold text-gray-800 mb-4">
                        Power BI Dashboard Ready
                      </h3>
                      <p className="text-gray-600 mb-6 max-w-md leading-relaxed">
                        Interactive Power BI report showing detailed hospital analytics, 
                        patient flow patterns, departmental insights, and predictive forecasting.
                        {hospitalData && (
                          <span className="block mt-2 font-medium text-blue-600">
                            Connected to your uploaded dataset
                          </span>
                        )}
                      </p>
                      <div className="space-y-3">
                        <Button 
                          className="cognizant-gradient w-full"
                          onClick={handleOpenPowerBI}
                        >
                          <ExternalLink className="w-4 h-4 mr-2" />
                          Launch Power BI Dashboard
                        </Button>
                        <Button 
                          variant="outline" 
                          className="w-full"
                          onClick={handleRefresh}
                          disabled={isRefreshing}
                        >
                          <RefreshCw className={`w-4 h-4 mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />
                          Refresh Embedded Report
                        </Button>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="summary" className="space-y-6">
            <div className="grid md:grid-cols-2 gap-6">
              <Card className="medical-card">
                <CardHeader>
                  <CardTitle className="text-lg">Available Reports</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {[
                    { name: "Weekly Forecast Summary", type: "PDF", size: "2.4 MB" },
                    { name: "Department Analytics", type: "Excel", size: "1.8 MB" },
                    { name: "Patient Flow Report", type: "PDF", size: "3.1 MB" },
                    { name: "Prediction Accuracy Report", type: "PDF", size: "1.5 MB" }
                  ].map((report) => (
                    <div key={report.name} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                      <div>
                        <p className="font-medium">{report.name}</p>
                        <p className="text-sm text-gray-600">{report.type} • {report.size}</p>
                      </div>
                      <Button 
                        size="sm" 
                        variant="outline"
                        onClick={() => handleDownloadReport(report.name)}
                      >
                        <Download className="w-4 h-4 mr-1" />
                        Download
                      </Button>
                    </div>
                  ))}
                </CardContent>
              </Card>

              <Card className="medical-card">
                <CardHeader>
                  <CardTitle className="text-lg">Export Options</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <Button 
                    className="w-full cognizant-gradient"
                    onClick={() => handleDownloadReport("Complete Analytics Package")}
                  >
                    <Download className="w-4 h-4 mr-2" />
                    Download Complete Analytics Package
                  </Button>
                  
                  <Button variant="outline" className="w-full">
                    Schedule Automated Reports
                  </Button>
                  
                  <Button 
                    variant="outline" 
                    className="w-full"
                    onClick={() => {
                      navigator.clipboard.writeText(window.location.href);
                      toast({
                        title: "Link copied",
                        description: "Dashboard link has been copied to clipboard.",
                      });
                    }}
                  >
                    Share Dashboard Link
                  </Button>
                  
                  <div className="text-sm text-gray-500 mt-4 p-3 bg-blue-50 rounded-lg">
                    <strong>Note:</strong> All reports include anonymized data and comply 
                    with HIPAA regulations. Custom report formats available upon request.
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default PowerBIAnalytics;
